pipeline {
    agent any

    environment{
            gitUrl = "https://gitee.com/luguangdong/lucifer-cloud-boot.git"
            gitCredentialsId = "695eef5c-1a0b-4338-b2d3-4ec08ea1f2b8"
            publisher_hostName = "lucifer-cloud-aliyun"
            mvn_home = "/data/maven/maven-3.9.6";
     }

    // hidden 标签jenkins需要安装 Hidden Parameter 插件
    parameters {
          choice choices: ['*/master', '*/dev'], description: '选择的branch', name: 'branch'
          hidden name: 'publisher_remoteDirectory', defaultValue: '/data/deploy/lucifer-cloud/ums/', description:'ssh远程文件夹'
          hidden name: 'publisher_sourceFiles', defaultValue: 'ums-service-1.0.1-SNAPSHOT.jar', description:'ssh远程构建文件'
          hidden name: 'publisher_startFiles', defaultValue: 'start.sh', description:'ssh远程启动文件'
          hidden name: 'appName', defaultValue: 'ums.jar', description:'服务名称'
       }


    // 存放所有任务的合集
    stages {
        // 拉取Git代码
        stage('checkout code from gitlab...') {
            steps {
                checkout scmGit(branches: [[name: "${branch}"]], extensions: [], userRemoteConfigs: [[credentialsId: "${gitCredentialsId}", url: "${gitUrl}"]])
            }
        }

        // 检测代码质量
        stage('code quality...') {
            steps {
                echo '检测代码质量'
            }
        }

        // 构建代码
        stage('mvn build code...') {
            steps {
                sh '${mvn_home}/bin/mvn clean package -DskipTests'
            }
        }

          // 将jar文件传到服务器上
          stage('transfer jar file to remoteDirectory...') {
              steps {
                 sh '''cp ./ums/ums-service/target/*.jar ./'''
                 sh '''cp ./deploy/ums/gitee/start.sh ./'''

                 sshPublisher(
                 publishers: [sshPublisherDesc(configName: "${publisher_hostName}",
                 transfers: [sshTransfer(cleanRemote: false,
                 excludes: '',
                 execCommand: '',
                 execTimeout: 120000,
                 flatten: false,
                 makeEmptyDirs: false,
                 noDefaultExcludes: false,
                 patternSeparator: '[, ]+',
                 remoteDirectory: "${publisher_remoteDirectory}",
                 remoteDirectorySDF: false,
                 removePrefix: '',
                 sourceFiles: "${publisher_startFiles}",
                 usePty: true)],
                 usePromotionTimestamp: false,
                 useWorkspaceInPromotion: false,
                 verbose: true)])


                 sshPublisher(
                 publishers: [sshPublisherDesc(configName: "${publisher_hostName}",
                 transfers: [sshTransfer(cleanRemote: false,
                 excludes: '',
                 execCommand: '''
                 cd ${publisher_remoteDirectory}
                 mv ${publisher_sourceFiles} ${appName}
                 chmod 777  start.sh
                 sh start.sh
                 ps -aux | grep -v grep | grep java
                 ''',
                 execTimeout: 120000,
                 flatten: false,
                 makeEmptyDirs: false,
                 noDefaultExcludes: false,
                 patternSeparator: '[, ]+',
                 remoteDirectory: "${publisher_remoteDirectory}",
                 remoteDirectorySDF: false,
                 removePrefix: '',
                 sourceFiles: "${publisher_sourceFiles}",
                 usePty: true)],
                 usePromotionTimestamp: false,
                 useWorkspaceInPromotion: false,
                 verbose: true)])
              }
          }
    }
}
